FROM alpine:edge

ENV MCROUTER_VERSION 0.36.0
ENV LIBRESSL_VERSION 2.7.1
ENV GLOG_VERSION 0.3.5
ENV GFLAGS_VERSION 2.2.1

ENV LIBRESSL /tmp/staticssl

RUN echo "@testing http://nl.alpinelinux.org/alpine/edge/testing" >>/etc/apk/repositories && \
    echo "@community http://nl.alpinelinux.org/alpine/edge/community" >>/etc/apk/repositories

RUN apk add --update --no-cache \
	alpine-sdk \
	linux-headers \
	autoconf \
	automake \
	libtool \
	python-dev \
	boost-dev \
	libevent-dev \
	libressl-dev \
	zlib-dev \
	snappy-dev \
	lz4-dev \
	xz-dev \
	binutils-dev \
	cmake \
	glog-dev@testing

# STATIC LIBRESSL
# RUN mkdir libressl && cd libressl && \
# 	curl -Ls http://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${LIBRESSL_VERSION}.tar.gz | tar xvzf - --strip-components=1

# RUN cd libressl \
# 	&& ./configure  --prefix=$LIBRESSL --enable-shared=no \
# 	&& make \
# 	&& make install

# Google gflags
WORKDIR /gflags
RUN curl -Ls https://github.com/gflags/gflags/archive/v${GFLAGS_VERSION}.tar.gz | tar xvzf - --strip-components=1
RUN cmake . \
	&& make VERBOSE=1 \
	&& make install

# Google's double-conversion library
WORKDIR /double-conversion
RUN curl -Ls https://github.com/google/double-conversion/archive/v3.0.0.tar.gz | tar xvzf - --strip-components=1
RUN cmake . \
	&& make VERBOSE=1 \
	&& make install

WORKDIR /folly
RUN curl -Ls https://github.com/facebook/folly/archive/v2018.03.19.00.tar.gz | tar xvzf - --strip-components=1
RUN cmake configure . \
	&& make \
	&& make install

# # Google glog
# WORKDIR /glog
# RUN curl -Ls https://github.com/google/glog/archive/v${GLOG_VERSION}.tar.gz | tar xvzf - --strip-components=1
# #RUN export CXXFLAGS="-fPIC" \
# RUN cmake . \
# 	&& make VERBOSE=1 \
# 	&& make install

WORKDIR /mcrouter
RUN curl -Ls https://github.com/facebook/mcrouter/archive/v${MCROUTER_VERSION}.tar.gz | tar xvzf - --strip-components=1

RUN cd mcrouter \
	&& autoreconf --install \
	&& ./configure \
	&& make

CMD ["ldd", "/mcrouter/mcrouter"]
